apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 30
  labels:
    app: ghost-app
  name: ghost-app
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ghost-app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: ghost-app
    spec:
      containers:
      - env:
        - name: caching__type
          value: redis
        - name: database__client
          value: mysql
        - name: database__connection__host
          value: 172.21.192.3
        - name: database__connection__database
          value: ghost
        - name: database__connection__user
          value: root
        - name: database__connection__password
          value: '}Z0dj7)nl(nJ,*K4'
        - name: url
          value: https://ghost-app.org
        - name: NODE_ENV
          value: development 
        image: ghost:alpine
        imagePullPolicy: IfNotPresent
        name: ghost-1
        resources:
          limits:
            cpu: 500m
            ephemeral-storage: 1Gi
            memory: 2Gi
          requests:
            cpu: 500m
            ephemeral-storage: 1Gi
            memory: 2Gi
        securityContext:
          capabilities:
            drop:
            - NET_RAW
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/ghost/content
          name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: amd64
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: ghost-storage
