{
  "version": 4,
  "terraform_version": "1.6.4",
  "serial": 21,
  "lineage": "eec06cd8-ce89-8971-61e1-d62323f2c2ab",
  "outputs": {
    "kubeconfig": {
      "value": "apiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMRENDQXBTZ0F3SUJBZ0lRUmEyZ05HRnZTVTlJQXY2YjNBbnNUVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRellqZGxORGhqWmkxaFlqQTFMVFE1TURNdFlXSTJOQzB3WlROaU16TmtZVEJoTWpZdwpJQmNOTWpNeE1USTRNVE16TkRVM1doZ1BNakExTXpFeE1qQXhORE0wTlRkYU1DOHhMVEFyQmdOVkJBTVRKRE5pCk4yVTBPR05tTFdGaU1EVXRORGt3TXkxaFlqWTBMVEJsTTJJek0yUmhNR0V5TmpDQ0FhSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0dQQURDQ0FZb0NnZ0dCQU1uVmgraWpLTE9KcXhNOUVObWtpMGtrTEp1WVAzbktENWFhdFRlKwpWYjBYZ25pQ2h5NlJsWlBPUU9sMVQ5VzRQZDNkRFBkYkRtbnFuUk0vVkM3WXprekl0bnVIV3FzdTUvQ3ZyY3FECmNhK2kzV2o2enRIWEtlRGxvcmRvZDBWczdjK2xUL2p5MW00U2ZBTm84aUVma0ZoeXlWRTFoQnF2aEY0VG5kaE4KWDVxTkJJYkFpandlalRVWG5GYUZUOU93QUlVL3h0dnNzWG53cUZmWnFjMld4dGwwRTBPU1BWYTQ1Y3RqY015OQpWdVJvOEVLZGlUL01yeDZOU1ZjdmxQc1Vzc2Y3cFR0TlRkQ3ZRelROODRDUUh6bi93OFNndUZSdG9nOXRRNDJYCnJzSDVSd0N6V2kzTTlqZGNEUTZ3QVczeDNlN29BVHRXU2F2RGNyMDRrTjMrbkw0TGFvVFAxSWdMSVZyeUp2SnIKckhIT3lhSFE5UzIvaFBIRzRTVmxRY2YrV1dUQTBwUHNsNkk1YWgySk14ZndzQzdsN1FSd2l4SnlOT2w3NjU2QQpub0VLdkgraFdvYVl5SGh4dU1KUHNvNzhUWE5nZVZsR3lUK0hiaFV1UFdna1JFVVpQdmlaTW5WMjdZdEU3RGU0CnpFYTFVRjM2MXRzTWN0WDA0Q0JzQUNocjl3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVCaTRRYjUwbUJpVTRkc3piSU10MWJ5RFk5dlV3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFFdGloRkpSaE5RMk1IQnNiQitXcWs2NHNVSlVOWDJzT1JEN1djcTVPQ21ICjM1QVIvTW5TQ3hrQXFZQU5XQTBlNEs5NG5Jblk3V2hzNHlHQmt6VHhIOWUxNlorQmxudG82OEZXbExnK2tuS3oKaVIxT3krb3hEVStNdTNyMjJpMXV2SEQyb0VhRElkRktoTGRweWxwcnB3Wkg5TWZod2NVd3ArVzBKL2w2dEFqOAplWTBnNHhDWDcrTjkxS0J2L3ZvNTJmMFlXemF2TzU4bms4WUl1eGd0ZmVrMjJwRUNkUUdMckxhWE1wVVdIdXgwCnJ3Vjh3djVaRExBQmpGdUhxR1YwTmMyM0RFOUpHZE9GRTJRRTErNUVRV2hzclp1UkEyUHk2QU9wM3hmOGFNV3QKeElvcVU2cUFiaGt0TXRkU1d2b2taeHVYcmVjR3Z2NlJvQkNPRUdLWG04eVlTay9PK1ova1k2ZGora3FqMmNEQwpnUGtTRDhKbUp1UGdxa2FwOTIxZkFHOTFEb25iMFdTYVh6ZUduOUVaK29GUkZXd3lTQnlWdit1QkdGY2drdVhuCmJielMwbjg5YXB5V2xTRUF3bW5aWit4ZzJHdkNiL3JWQngwSzltOFlnMnU0ZXlHSnpNaklOSi9ITmdoKzlkK1UKQU5GS0VtOWNteHB2SC9zYnhmSVdiZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K\n    server: 34.67.206.230\n  name: ghost\ncontexts:\n- context:\n    cluster: ghost\n    user: ghost\n  name: ghost\ncurrent-context: ghost\nkind: Config\npreferences: {}\nusers:\n- name: ghost\n  user:\n    auth-provider:\n      config:\n        cmd-args: config config-helper --format=json --flatten\n        cmd-path: gcloud\n        expiry-key: '{.credential.token_expiry}'\n        token-key: '{.credential.access_token}'\n      name: gcp\n\n",
      "type": "string"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "google_client_config",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_token": "ya29.c.c0AY_VpZgaXO8LqDlYY2za9d2WOQyO3b7mU1kTHEuQyYhL3rGyGyOj3Gqm-janYe3OSXdOjEMW-cZyCIq_39JwL4PSITu3jQAtZta_JbZjObDLGLsgvphHry7PebGbsHN07My659Y3mjfd1Lgso388JZIIqVE0KZhqwMAPOOnjcTKxK6ymlVs-zYaAL3See_4jS0-8HN0b1tTBT3NCceJ-9K_u94kHZoDJiOOfxv_JRZ4tEnzw9i03Hd1QUY59K7NWQHKUH_yN6r0LxgyzyH7D2PGd0W1GfFbcumKsU6vXFlIIEqtdX80x_vw0ft8UHrZC85MGefBOmHZQwFA8LDuN8fzS4CoWIfjloXteIVpUzyMfSDuP8-ytDPzdIs8G388PZdYOegwQYerOb7zj2v8hevtSBhMc4jcQgtOX-7wUm7kU3IxSv4c82Yxv88oqvdUQb66F1pa7gnFe12OglO68tratmvaz36UfeXrsvk5ulBx3bgv5qRRpkQjZYrBvvkYpmByscOvZrqWX8FbYvfwe9l5Ul2IhXV0q8Btn360jMil5_lfMyU1RQ3MniBSd4mttXQyUSWcbFbg7sozU54aFUg6q_hOfm8zU3ZYniaXR3MmfZFb2dcf_dfau0bvVksgggx2FVyz7U8smS6fWo09Qs2UY6k88Qz5XjeixsvYuYZre3SUoOfcq62h3zItWupdFUQ_QXoYuk45WxSIR33_i_lkq1XettItXnkRJB1zMF4ryrWV22-Ru6y-MXxQ4bM3MZOrR-4cBJ4Qcu9_S4zz3ZsulngI3B1k-ombvgVbht6UQ88vFMnpbo21IbVofgVOhnvmqgm6ItxpJmfasga43ZcltSJXXItvMIv2jr3vwZVMzvM_fViyOaq8VQ4xtXIb3vSsBdShFRmMtmkXossgp43uUI4_z_pvJ8Rtxb9lefdg49jf7FJg4-FBfb15Yu6FdjR8n5WO0R3VWF9c3buhfjgI3JllposYZcZf29xh7FkjYIRre2hom_ol",
            "id": "projects/\"ace-computer-406008\"/regions/\"us-central1\"/zones/\u003cnull\u003e",
            "project": "ace-computer-406008",
            "region": "us-central1",
            "zone": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "kubectl_filename_list",
      "name": "manifests",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "basenames": [
              "ghost-app-service.yaml",
              "ghost-app.yaml",
              "ghost-ingress.yaml",
              "ghost-storage.yaml",
              "ingess-deploy.yaml",
              "pv.yaml",
              "tls-ghost.yaml"
            ],
            "id": "73811228f061948e419d8bea844c66ad547f3133f93d287d0c65081065cdea9f",
            "matches": [
              "../yaml/ghost-app-service.yaml",
              "../yaml/ghost-app.yaml",
              "../yaml/ghost-ingress.yaml",
              "../yaml/ghost-storage.yaml",
              "../yaml/ingess-deploy.yaml",
              "../yaml/pv.yaml",
              "../yaml/tls-ghost.yaml"
            ],
            "pattern": "./../yaml/*.yaml"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_compute_disk",
      "name": "ghost_pv",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "async_primary_disk": [],
            "creation_timestamp": "2023-11-28T05:56:11.149-08:00",
            "description": "",
            "disk_encryption_key": [],
            "effective_labels": {},
            "guest_os_features": [],
            "id": "projects/ace-computer-406008/zones/us-central1-a/disks/ghost-pv",
            "image": "",
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": {},
            "last_attach_timestamp": "",
            "last_detach_timestamp": "",
            "licenses": [],
            "name": "ghost-pv",
            "physical_block_size_bytes": 4096,
            "project": "ace-computer-406008",
            "provisioned_iops": 0,
            "provisioned_throughput": 0,
            "self_link": "https://www.googleapis.com/compute/v1/projects/ace-computer-406008/zones/us-central1-a/disks/ghost-pv",
            "size": 10,
            "snapshot": "",
            "source_disk": "",
            "source_disk_id": "",
            "source_image_encryption_key": [],
            "source_image_id": "",
            "source_snapshot_encryption_key": [],
            "source_snapshot_id": "",
            "terraform_labels": {},
            "timeouts": null,
            "type": "pd-standard",
            "users": [],
            "zone": "us-central1-a"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "google_container_cluster",
      "name": "ghost",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "addons_config": [
              {
                "cloudrun_config": [],
                "config_connector_config": [],
                "dns_cache_config": [
                  {
                    "enabled": true
                  }
                ],
                "gce_persistent_disk_csi_driver_config": [
                  {
                    "enabled": true
                  }
                ],
                "gcp_filestore_csi_driver_config": [
                  {
                    "enabled": true
                  }
                ],
                "gcs_fuse_csi_driver_config": [
                  {
                    "enabled": true
                  }
                ],
                "gke_backup_agent_config": [],
                "horizontal_pod_autoscaling": [],
                "http_load_balancing": [],
                "network_policy_config": [
                  {
                    "disabled": true
                  }
                ]
              }
            ],
            "allow_net_admin": null,
            "authenticator_groups_config": [],
            "binary_authorization": [
              {
                "enabled": false,
                "evaluation_mode": ""
              }
            ],
            "cluster_autoscaling": [
              {
                "auto_provisioning_defaults": [
                  {
                    "boot_disk_kms_key": "",
                    "disk_size": 0,
                    "disk_type": "",
                    "image_type": "COS_CONTAINERD",
                    "management": [
                      {
                        "auto_repair": true,
                        "auto_upgrade": true,
                        "upgrade_options": []
                      }
                    ],
                    "min_cpu_platform": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "service_account": "default",
                    "shielded_instance_config": [],
                    "upgrade_settings": [
                      {
                        "blue_green_settings": [],
                        "max_surge": 1,
                        "max_unavailable": 0,
                        "strategy": "SURGE"
                      }
                    ]
                  }
                ],
                "enabled": true,
                "resource_limits": [
                  {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "resource_type": "cpu"
                  },
                  {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "resource_type": "memory"
                  },
                  {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "resource_type": "nvidia-tesla-t4"
                  },
                  {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "resource_type": "nvidia-tesla-a100"
                  }
                ]
              }
            ],
            "cluster_ipv4_cidr": "10.71.128.0/17",
            "confidential_nodes": [],
            "cost_management_config": [],
            "database_encryption": [
              {
                "key_name": "",
                "state": "DECRYPTED"
              }
            ],
            "datapath_provider": "ADVANCED_DATAPATH",
            "default_max_pods_per_node": 110,
            "default_snat_status": [
              {
                "disabled": false
              }
            ],
            "deletion_protection": false,
            "description": "",
            "dns_config": [
              {
                "cluster_dns": "CLOUD_DNS",
                "cluster_dns_domain": "cluster.local",
                "cluster_dns_scope": "CLUSTER_SCOPE"
              }
            ],
            "enable_autopilot": true,
            "enable_intranode_visibility": true,
            "enable_k8s_beta_apis": [],
            "enable_kubernetes_alpha": false,
            "enable_l4_ilb_subsetting": false,
            "enable_legacy_abac": false,
            "enable_shielded_nodes": true,
            "enable_tpu": false,
            "endpoint": "34.67.206.230",
            "fleet": [],
            "gateway_api_config": [
              {
                "channel": "CHANNEL_STANDARD"
              }
            ],
            "id": "projects/ace-computer-406008/locations/us-central1/clusters/ghost",
            "identity_service_config": [],
            "initial_node_count": 1,
            "ip_allocation_policy": [
              {
                "additional_pod_ranges_config": [],
                "cluster_ipv4_cidr_block": "10.71.128.0/17",
                "cluster_secondary_range_name": "gke-ghost-pods-0321217d",
                "pod_cidr_overprovision_config": [
                  {
                    "disabled": false
                  }
                ],
                "services_ipv4_cidr_block": "34.118.224.0/20",
                "services_secondary_range_name": "",
                "stack_type": "IPV4"
              }
            ],
            "label_fingerprint": "a9dc16a7",
            "location": "us-central1",
            "logging_config": [
              {
                "enable_components": [
                  "SYSTEM_COMPONENTS",
                  "WORKLOADS"
                ]
              }
            ],
            "logging_service": "logging.googleapis.com/kubernetes",
            "maintenance_policy": [],
            "master_auth": [
              {
                "client_certificate": "",
                "client_certificate_config": [
                  {
                    "issue_client_certificate": false
                  }
                ],
                "client_key": "",
                "cluster_ca_certificate": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMRENDQXBTZ0F3SUJBZ0lRUmEyZ05HRnZTVTlJQXY2YjNBbnNUVEFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlRellqZGxORGhqWmkxaFlqQTFMVFE1TURNdFlXSTJOQzB3WlROaU16TmtZVEJoTWpZdwpJQmNOTWpNeE1USTRNVE16TkRVM1doZ1BNakExTXpFeE1qQXhORE0wTlRkYU1DOHhMVEFyQmdOVkJBTVRKRE5pCk4yVTBPR05tTFdGaU1EVXRORGt3TXkxaFlqWTBMVEJsTTJJek0yUmhNR0V5TmpDQ0FhSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0dQQURDQ0FZb0NnZ0dCQU1uVmgraWpLTE9KcXhNOUVObWtpMGtrTEp1WVAzbktENWFhdFRlKwpWYjBYZ25pQ2h5NlJsWlBPUU9sMVQ5VzRQZDNkRFBkYkRtbnFuUk0vVkM3WXprekl0bnVIV3FzdTUvQ3ZyY3FECmNhK2kzV2o2enRIWEtlRGxvcmRvZDBWczdjK2xUL2p5MW00U2ZBTm84aUVma0ZoeXlWRTFoQnF2aEY0VG5kaE4KWDVxTkJJYkFpandlalRVWG5GYUZUOU93QUlVL3h0dnNzWG53cUZmWnFjMld4dGwwRTBPU1BWYTQ1Y3RqY015OQpWdVJvOEVLZGlUL01yeDZOU1ZjdmxQc1Vzc2Y3cFR0TlRkQ3ZRelROODRDUUh6bi93OFNndUZSdG9nOXRRNDJYCnJzSDVSd0N6V2kzTTlqZGNEUTZ3QVczeDNlN29BVHRXU2F2RGNyMDRrTjMrbkw0TGFvVFAxSWdMSVZyeUp2SnIKckhIT3lhSFE5UzIvaFBIRzRTVmxRY2YrV1dUQTBwUHNsNkk1YWgySk14ZndzQzdsN1FSd2l4SnlOT2w3NjU2QQpub0VLdkgraFdvYVl5SGh4dU1KUHNvNzhUWE5nZVZsR3lUK0hiaFV1UFdna1JFVVpQdmlaTW5WMjdZdEU3RGU0CnpFYTFVRjM2MXRzTWN0WDA0Q0JzQUNocjl3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQWdRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVCaTRRYjUwbUJpVTRkc3piSU10MWJ5RFk5dlV3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dHQkFFdGloRkpSaE5RMk1IQnNiQitXcWs2NHNVSlVOWDJzT1JEN1djcTVPQ21ICjM1QVIvTW5TQ3hrQXFZQU5XQTBlNEs5NG5Jblk3V2hzNHlHQmt6VHhIOWUxNlorQmxudG82OEZXbExnK2tuS3oKaVIxT3krb3hEVStNdTNyMjJpMXV2SEQyb0VhRElkRktoTGRweWxwcnB3Wkg5TWZod2NVd3ArVzBKL2w2dEFqOAplWTBnNHhDWDcrTjkxS0J2L3ZvNTJmMFlXemF2TzU4bms4WUl1eGd0ZmVrMjJwRUNkUUdMckxhWE1wVVdIdXgwCnJ3Vjh3djVaRExBQmpGdUhxR1YwTmMyM0RFOUpHZE9GRTJRRTErNUVRV2hzclp1UkEyUHk2QU9wM3hmOGFNV3QKeElvcVU2cUFiaGt0TXRkU1d2b2taeHVYcmVjR3Z2NlJvQkNPRUdLWG04eVlTay9PK1ova1k2ZGora3FqMmNEQwpnUGtTRDhKbUp1UGdxa2FwOTIxZkFHOTFEb25iMFdTYVh6ZUduOUVaK29GUkZXd3lTQnlWdit1QkdGY2drdVhuCmJielMwbjg5YXB5V2xTRUF3bW5aWit4ZzJHdkNiL3JWQngwSzltOFlnMnU0ZXlHSnpNaklOSi9ITmdoKzlkK1UKQU5GS0VtOWNteHB2SC9zYnhmSVdiZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "master_authorized_networks_config": [],
            "master_version": "1.27.3-gke.100",
            "mesh_certificates": [],
            "min_master_version": null,
            "monitoring_config": [
              {
                "advanced_datapath_observability_config": [
                  {
                    "enable_metrics": true,
                    "relay_mode": ""
                  }
                ],
                "enable_components": [
                  "SYSTEM_COMPONENTS"
                ],
                "managed_prometheus": [
                  {
                    "enabled": true
                  }
                ]
              }
            ],
            "monitoring_service": "monitoring.googleapis.com/kubernetes",
            "name": "ghost",
            "network": "projects/ace-computer-406008/global/networks/default",
            "network_policy": [
              {
                "enabled": false,
                "provider": "PROVIDER_UNSPECIFIED"
              }
            ],
            "networking_mode": "VPC_NATIVE",
            "node_config": [
              {
                "advanced_machine_features": [],
                "boot_disk_kms_key": "",
                "confidential_nodes": [],
                "disk_size_gb": 100,
                "disk_type": "pd-standard",
                "effective_taints": [
                  {
                    "effect": "NO_SCHEDULE",
                    "key": "cloud.google.com/gke-quick-remove",
                    "value": "true"
                  }
                ],
                "ephemeral_storage_local_ssd_config": [],
                "fast_socket": [],
                "gcfs_config": [],
                "guest_accelerator": [],
                "gvnic": [],
                "host_maintenance_policy": [],
                "image_type": "COS_CONTAINERD",
                "kubelet_config": [],
                "labels": {},
                "linux_node_config": [],
                "local_nvme_ssd_block_config": [],
                "local_ssd_count": 0,
                "logging_variant": "DEFAULT",
                "machine_type": "e2-small",
                "metadata": {
                  "disable-legacy-endpoints": "true"
                },
                "min_cpu_platform": "",
                "node_group": "",
                "oauth_scopes": [
                  "https://www.googleapis.com/auth/devstorage.read_only",
                  "https://www.googleapis.com/auth/logging.write",
                  "https://www.googleapis.com/auth/monitoring",
                  "https://www.googleapis.com/auth/service.management.readonly",
                  "https://www.googleapis.com/auth/servicecontrol",
                  "https://www.googleapis.com/auth/trace.append"
                ],
                "preemptible": false,
                "reservation_affinity": [
                  {
                    "consume_reservation_type": "NO_RESERVATION",
                    "key": "",
                    "values": []
                  }
                ],
                "resource_labels": {},
                "service_account": "default",
                "shielded_instance_config": [
                  {
                    "enable_integrity_monitoring": true,
                    "enable_secure_boot": true
                  }
                ],
                "sole_tenant_config": [],
                "spot": false,
                "tags": [],
                "taint": [],
                "workload_metadata_config": [
                  {
                    "mode": "GKE_METADATA"
                  }
                ]
              }
            ],
            "node_locations": [
              "us-central1-a",
              "us-central1-b",
              "us-central1-c",
              "us-central1-f"
            ],
            "node_pool": [
              {
                "autoscaling": [
                  {
                    "location_policy": "BALANCED",
                    "max_node_count": 1000,
                    "min_node_count": 0,
                    "total_max_node_count": 0,
                    "total_min_node_count": 0
                  }
                ],
                "initial_node_count": 1,
                "instance_group_urls": [],
                "managed_instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "default-pool",
                "name_prefix": "",
                "network_config": [
                  {
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.71.128.0/17",
                    "pod_range": "gke-ghost-pods-0321217d"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "effective_taints": [
                      {
                        "effect": "NO_SCHEDULE",
                        "key": "cloud.google.com/gke-quick-remove",
                        "value": "true"
                      }
                    ],
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "COS_CONTAINERD",
                    "kubelet_config": [],
                    "labels": {},
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "e2-small",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [
                      {
                        "consume_reservation_type": "NO_RESERVATION",
                        "key": "",
                        "values": []
                      }
                    ],
                    "resource_labels": {},
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "us-central1-a"
                ],
                "placement_policy": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.27.3-gke.100"
              },
              {
                "autoscaling": [
                  {
                    "location_policy": "BALANCED",
                    "max_node_count": 1000,
                    "min_node_count": 0,
                    "total_max_node_count": 0,
                    "total_min_node_count": 0
                  }
                ],
                "initial_node_count": 0,
                "instance_group_urls": [],
                "managed_instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "pool-1",
                "name_prefix": "",
                "network_config": [
                  {
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.71.128.0/17",
                    "pod_range": "gke-ghost-pods-0321217d"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "effective_taints": [],
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "COS_CONTAINERD",
                    "kubelet_config": [],
                    "labels": {},
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "e2-medium",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [
                      {
                        "consume_reservation_type": "NO_RESERVATION",
                        "key": "",
                        "values": []
                      }
                    ],
                    "resource_labels": {},
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "us-central1-a",
                  "us-central1-b",
                  "us-central1-c",
                  "us-central1-f"
                ],
                "placement_policy": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.27.3-gke.100"
              },
              {
                "autoscaling": [
                  {
                    "location_policy": "BALANCED",
                    "max_node_count": 1000,
                    "min_node_count": 0,
                    "total_max_node_count": 0,
                    "total_min_node_count": 0
                  }
                ],
                "initial_node_count": 0,
                "instance_group_urls": [],
                "managed_instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "pool-2",
                "name_prefix": "",
                "network_config": [
                  {
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.71.128.0/17",
                    "pod_range": "gke-ghost-pods-0321217d"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "effective_taints": [],
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "COS_CONTAINERD",
                    "kubelet_config": [],
                    "labels": {},
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "e2-standard-2",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [
                      {
                        "consume_reservation_type": "NO_RESERVATION",
                        "key": "",
                        "values": []
                      }
                    ],
                    "resource_labels": {},
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "us-central1-a",
                  "us-central1-b",
                  "us-central1-c",
                  "us-central1-f"
                ],
                "placement_policy": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.27.3-gke.100"
              },
              {
                "autoscaling": [
                  {
                    "location_policy": "BALANCED",
                    "max_node_count": 1000,
                    "min_node_count": 0,
                    "total_max_node_count": 0,
                    "total_min_node_count": 0
                  }
                ],
                "initial_node_count": 0,
                "instance_group_urls": [],
                "managed_instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "pool-3",
                "name_prefix": "",
                "network_config": [
                  {
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.71.128.0/17",
                    "pod_range": "gke-ghost-pods-0321217d"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "effective_taints": [],
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "COS_CONTAINERD",
                    "kubelet_config": [],
                    "labels": {},
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "e2-standard-4",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [
                      {
                        "consume_reservation_type": "NO_RESERVATION",
                        "key": "",
                        "values": []
                      }
                    ],
                    "resource_labels": {},
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "us-central1-a",
                  "us-central1-b",
                  "us-central1-c",
                  "us-central1-f"
                ],
                "placement_policy": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.27.3-gke.100"
              },
              {
                "autoscaling": [
                  {
                    "location_policy": "BALANCED",
                    "max_node_count": 1000,
                    "min_node_count": 0,
                    "total_max_node_count": 0,
                    "total_min_node_count": 0
                  }
                ],
                "initial_node_count": 0,
                "instance_group_urls": [],
                "managed_instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "pool-4",
                "name_prefix": "",
                "network_config": [
                  {
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.71.128.0/17",
                    "pod_range": "gke-ghost-pods-0321217d"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "effective_taints": [],
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "COS_CONTAINERD",
                    "kubelet_config": [],
                    "labels": {},
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "e2-standard-8",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [
                      {
                        "consume_reservation_type": "NO_RESERVATION",
                        "key": "",
                        "values": []
                      }
                    ],
                    "resource_labels": {},
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "us-central1-a",
                  "us-central1-b",
                  "us-central1-c",
                  "us-central1-f"
                ],
                "placement_policy": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.27.3-gke.100"
              },
              {
                "autoscaling": [
                  {
                    "location_policy": "BALANCED",
                    "max_node_count": 1000,
                    "min_node_count": 0,
                    "total_max_node_count": 0,
                    "total_min_node_count": 0
                  }
                ],
                "initial_node_count": 0,
                "instance_group_urls": [],
                "managed_instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "pool-5",
                "name_prefix": "",
                "network_config": [
                  {
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.71.128.0/17",
                    "pod_range": "gke-ghost-pods-0321217d"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "effective_taints": [],
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "COS_CONTAINERD",
                    "kubelet_config": [],
                    "labels": {},
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "e2-standard-16",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [
                      {
                        "consume_reservation_type": "NO_RESERVATION",
                        "key": "",
                        "values": []
                      }
                    ],
                    "resource_labels": {},
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "us-central1-a",
                  "us-central1-b",
                  "us-central1-c",
                  "us-central1-f"
                ],
                "placement_policy": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.27.3-gke.100"
              },
              {
                "autoscaling": [
                  {
                    "location_policy": "BALANCED",
                    "max_node_count": 1000,
                    "min_node_count": 0,
                    "total_max_node_count": 0,
                    "total_min_node_count": 0
                  }
                ],
                "initial_node_count": 0,
                "instance_group_urls": [],
                "managed_instance_group_urls": [],
                "management": [
                  {
                    "auto_repair": true,
                    "auto_upgrade": true
                  }
                ],
                "max_pods_per_node": 32,
                "name": "pool-6",
                "name_prefix": "",
                "network_config": [
                  {
                    "create_pod_range": false,
                    "enable_private_nodes": false,
                    "pod_cidr_overprovision_config": [],
                    "pod_ipv4_cidr_block": "10.71.128.0/17",
                    "pod_range": "gke-ghost-pods-0321217d"
                  }
                ],
                "node_config": [
                  {
                    "advanced_machine_features": [],
                    "boot_disk_kms_key": "",
                    "confidential_nodes": [],
                    "disk_size_gb": 100,
                    "disk_type": "pd-standard",
                    "effective_taints": [],
                    "ephemeral_storage_local_ssd_config": [],
                    "fast_socket": [],
                    "gcfs_config": [],
                    "guest_accelerator": [],
                    "gvnic": [],
                    "host_maintenance_policy": [],
                    "image_type": "COS_CONTAINERD",
                    "kubelet_config": [],
                    "labels": {},
                    "linux_node_config": [],
                    "local_nvme_ssd_block_config": [],
                    "local_ssd_count": 0,
                    "logging_variant": "DEFAULT",
                    "machine_type": "e2-standard-32",
                    "metadata": {
                      "disable-legacy-endpoints": "true"
                    },
                    "min_cpu_platform": "",
                    "node_group": "",
                    "oauth_scopes": [
                      "https://www.googleapis.com/auth/devstorage.read_only",
                      "https://www.googleapis.com/auth/logging.write",
                      "https://www.googleapis.com/auth/monitoring",
                      "https://www.googleapis.com/auth/service.management.readonly",
                      "https://www.googleapis.com/auth/servicecontrol",
                      "https://www.googleapis.com/auth/trace.append"
                    ],
                    "preemptible": false,
                    "reservation_affinity": [
                      {
                        "consume_reservation_type": "NO_RESERVATION",
                        "key": "",
                        "values": []
                      }
                    ],
                    "resource_labels": {},
                    "service_account": "default",
                    "shielded_instance_config": [
                      {
                        "enable_integrity_monitoring": true,
                        "enable_secure_boot": true
                      }
                    ],
                    "sole_tenant_config": [],
                    "spot": false,
                    "tags": [],
                    "taint": [],
                    "workload_metadata_config": [
                      {
                        "mode": "GKE_METADATA"
                      }
                    ]
                  }
                ],
                "node_count": 0,
                "node_locations": [
                  "us-central1-a",
                  "us-central1-b",
                  "us-central1-c",
                  "us-central1-f"
                ],
                "placement_policy": [],
                "upgrade_settings": [
                  {
                    "blue_green_settings": [],
                    "max_surge": 1,
                    "max_unavailable": 0,
                    "strategy": "SURGE"
                  }
                ],
                "version": "1.27.3-gke.100"
              }
            ],
            "node_pool_auto_config": [],
            "node_pool_defaults": [
              {
                "node_config_defaults": [
                  {
                    "logging_variant": "DEFAULT"
                  }
                ]
              }
            ],
            "node_version": "1.27.3-gke.100",
            "notification_config": [
              {
                "pubsub": [
                  {
                    "enabled": false,
                    "filter": [],
                    "topic": ""
                  }
                ]
              }
            ],
            "operation": null,
            "private_cluster_config": [
              {
                "enable_private_endpoint": false,
                "enable_private_nodes": false,
                "master_global_access_config": [
                  {
                    "enabled": false
                  }
                ],
                "master_ipv4_cidr_block": "",
                "peering_name": "",
                "private_endpoint": "10.128.0.41",
                "private_endpoint_subnetwork": "",
                "public_endpoint": "34.67.206.230"
              }
            ],
            "private_ipv6_google_access": "",
            "project": "ace-computer-406008",
            "release_channel": [
              {
                "channel": "REGULAR"
              }
            ],
            "remove_default_node_pool": null,
            "resource_labels": {},
            "resource_usage_export_config": [],
            "security_posture_config": [
              {
                "mode": "BASIC",
                "vulnerability_mode": "VULNERABILITY_BASIC"
              }
            ],
            "self_link": "https://container.googleapis.com/v1/projects/ace-computer-406008/locations/us-central1/clusters/ghost",
            "service_external_ips_config": [
              {
                "enabled": false
              }
            ],
            "services_ipv4_cidr": "34.118.224.0/20",
            "subnetwork": "projects/ace-computer-406008/regions/us-central1/subnetworks/default",
            "timeouts": null,
            "tpu_ipv4_cidr_block": "",
            "vertical_pod_autoscaling": [
              {
                "enabled": true
              }
            ],
            "workload_identity_config": [
              {
                "workload_pool": "ace-computer-406008.svc.id.goog"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAwLCJkZWxldGUiOjI0MDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9"
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubectl_manifest",
      "name": "test",
      "provider": "provider[\"registry.terraform.io/gavinbunney/kubectl\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/services/ghost-app-service",
            "ignore_fields": null,
            "kind": "Service",
            "live_manifest_incluster": "6ce86fa7a8cb2afbe22af2fc98108d956a356c3f135704af01e4337635cf156b",
            "live_uid": "a854caa8-8dce-4939-bb43-32fbfebadabf",
            "name": "ghost-app-service",
            "namespace": "default",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "a854caa8-8dce-4939-bb43-32fbfebadabf",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    beta.cloud.google.com/backend-config: '{\"ports\": {\"443\":\"svc-backend\"}}'\n    cloud.google.com/neg: '{\"ingress\":true}'\n    networking.gke.io/v1beta1.FrontendConfig: svc-frontend\n  labels:\n    app: ghost-app\n  name: ghost-app-service\n  namespace: default\nspec:\n  allocateLoadBalancerNodePorts: true\n  externalTrafficPolicy: Cluster\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - nodePort: 30901\n    port: 80\n    protocol: TCP\n    targetPort: 2368\n  selector:\n    app: ghost-app\n  sessionAffinity: None\n  type: LoadBalancer\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n    beta.cloud.google.com/backend-config: '{\"ports\": {\"443\":\"svc-backend\"}}'\n    cloud.google.com/neg: '{\"ingress\":true}'\n    networking.gke.io/v1beta1.FrontendConfig: svc-frontend\n  labels:\n    app: ghost-app\n  name: ghost-app-service\n  namespace: default\nspec:\n  allocateLoadBalancerNodePorts: true\n  externalTrafficPolicy: Cluster\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - nodePort: 30901\n    port: 80\n    protocol: TCP\n    targetPort: 2368\n  selector:\n    app: ghost-app\n  sessionAffinity: None\n  type: LoadBalancer\n",
            "yaml_incluster": "6ce86fa7a8cb2afbe22af2fc98108d956a356c3f135704af01e4337635cf156b"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_filename_list.manifests"
          ]
        },
        {
          "index_key": 1,
          "status": "tainted",
          "schema_version": 1,
          "attributes": {
            "api_version": "apps/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/apps/v1/namespaces/default/deployments/ghost-app",
            "ignore_fields": null,
            "kind": "Deployment",
            "live_manifest_incluster": "108fd47fd7487ce9a0bd18329dc4fc388008c2ba5174131baf939e9f4c1b78e7",
            "live_uid": "6cf62b22-6816-40b7-b2d4-3eccf18d2e67",
            "name": "ghost-app",
            "namespace": "default",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "6cf62b22-6816-40b7-b2d4-3eccf18d2e67",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  generation: 30\n  labels:\n    app: ghost-app\n  name: ghost-app\n  namespace: default\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: ghost-app\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: ghost-app\n    spec:\n      containers:\n      - env:\n        - name: caching__type\n          value: redis\n        - name: database__client\n          value: mysql\n        - name: database__connection__host\n          value: 172.21.192.3\n        - name: database__connection__database\n          value: ghost\n        - name: database__connection__user\n          value: root\n        - name: database__connection__password\n          value: '}Z0dj7)nl(nJ,*K4'\n        - name: url\n          value: https://ghost-app.org\n        - name: NODE_ENV\n          value: development \n        image: ghost:alpine\n        imagePullPolicy: IfNotPresent\n        name: ghost-1\n        resources:\n          limits:\n            cpu: 500m\n            ephemeral-storage: 1Gi\n            memory: 2Gi\n          requests:\n            cpu: 500m\n            ephemeral-storage: 1Gi\n            memory: 2Gi\n        securityContext:\n          capabilities:\n            drop:\n            - NET_RAW\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: /var/lib/ghost/content\n          name: data\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext:\n        seccompProfile:\n          type: RuntimeDefault\n      terminationGracePeriodSeconds: 30\n      tolerations:\n      - effect: NoSchedule\n        key: kubernetes.io/arch\n        operator: Equal\n        value: amd64\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: ghost-storage\n",
            "yaml_body_parsed": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  generation: 30\n  labels:\n    app: ghost-app\n  name: ghost-app\n  namespace: default\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: ghost-app\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: ghost-app\n    spec:\n      containers:\n      - env:\n        - name: caching__type\n          value: redis\n        - name: database__client\n          value: mysql\n        - name: database__connection__host\n          value: 172.21.192.3\n        - name: database__connection__database\n          value: ghost\n        - name: database__connection__user\n          value: root\n        - name: database__connection__password\n          value: '}Z0dj7)nl(nJ,*K4'\n        - name: url\n          value: https://ghost-app.org\n        - name: NODE_ENV\n          value: development\n        image: ghost:alpine\n        imagePullPolicy: IfNotPresent\n        name: ghost-1\n        resources:\n          limits:\n            cpu: 500m\n            ephemeral-storage: 1Gi\n            memory: 2Gi\n          requests:\n            cpu: 500m\n            ephemeral-storage: 1Gi\n            memory: 2Gi\n        securityContext:\n          capabilities:\n            drop:\n            - NET_RAW\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        volumeMounts:\n        - mountPath: /var/lib/ghost/content\n          name: data\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext:\n        seccompProfile:\n          type: RuntimeDefault\n      terminationGracePeriodSeconds: 30\n      tolerations:\n      - effect: NoSchedule\n        key: kubernetes.io/arch\n        operator: Equal\n        value: amd64\n      volumes:\n      - name: data\n        persistentVolumeClaim:\n          claimName: ghost-storage\n",
            "yaml_incluster": "108fd47fd7487ce9a0bd18329dc4fc388008c2ba5174131baf939e9f4c1b78e7"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_filename_list.manifests"
          ]
        },
        {
          "index_key": 2,
          "schema_version": 1,
          "attributes": {
            "api_version": "networking.k8s.io/v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/apis/networking.k8s.io/v1/namespaces/default/ingresses/ghost-ingress",
            "ignore_fields": null,
            "kind": "Ingress",
            "live_manifest_incluster": "85d389b4acc544305b557ab8357fcb04b798bea838bf20eff027c0b4f6b1ae44",
            "live_uid": "fcd94d97-52ee-4fb8-bce6-429ad8b78ece",
            "name": "ghost-ingress",
            "namespace": "default",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "fcd94d97-52ee-4fb8-bce6-429ad8b78ece",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    kubernetes.io/ingress.allow-http: \"false\"\n    nginx.ingress.kubernetes.io/ssl-redirect: \"true\"\n    kubernetes.io/ingress.class: nginx\n  generation: 1\n  name: ghost-ingress\n  namespace: default\nspec:\n  rules:\n  - host: ghost-app.org\n    http:\n      paths:\n      - backend:\n          service:\n            name: ghost-app-service\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n  tls:\n  - hosts:\n    - ghost-app.org\n    secretName: tls-ghost\n",
            "yaml_body_parsed": "apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  annotations:\n    kubernetes.io/ingress.allow-http: \"false\"\n    kubernetes.io/ingress.class: nginx\n    nginx.ingress.kubernetes.io/ssl-redirect: \"true\"\n  generation: 1\n  name: ghost-ingress\n  namespace: default\nspec:\n  rules:\n  - host: ghost-app.org\n    http:\n      paths:\n      - backend:\n          service:\n            name: ghost-app-service\n            port:\n              number: 80\n        path: /\n        pathType: Prefix\n  tls:\n  - hosts:\n    - ghost-app.org\n    secretName: tls-ghost\n",
            "yaml_incluster": "85d389b4acc544305b557ab8357fcb04b798bea838bf20eff027c0b4f6b1ae44"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_filename_list.manifests"
          ]
        },
        {
          "index_key": 3,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/persistentvolumeclaims/ghost-storage",
            "ignore_fields": null,
            "kind": "PersistentVolumeClaim",
            "live_manifest_incluster": "06c2325d9b6dda2d878cf3bbe8d9527f1948880908b9a684f3df038fb617696e",
            "live_uid": "c1eee67e-530e-4e6c-8fd2-1d5910f6dd72",
            "name": "ghost-storage",
            "namespace": "default",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "c1eee67e-530e-4e6c-8fd2-1d5910f6dd72",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  annotations:\n    pv.kubernetes.io/bind-completed: \"yes\"\n    pv.kubernetes.io/bound-by-controller: \"yes\"\n    volume.beta.kubernetes.io/storage-provisioner: pd.csi.storage.gke.io\n    volume.kubernetes.io/storage-provisioner: pd.csi.storage.gke.io\n  finalizers:\n  - kubernetes.io/pvc-protection\n  name: ghost-storage\n  namespace: default\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n  storageClassName: gold\n  volumeMode: Filesystem\n  volumeName: ghost-pv\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  annotations:\n    pv.kubernetes.io/bind-completed: \"yes\"\n    pv.kubernetes.io/bound-by-controller: \"yes\"\n    volume.beta.kubernetes.io/storage-provisioner: pd.csi.storage.gke.io\n    volume.kubernetes.io/storage-provisioner: pd.csi.storage.gke.io\n  finalizers:\n  - kubernetes.io/pvc-protection\n  name: ghost-storage\n  namespace: default\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 50Gi\n  storageClassName: gold\n  volumeMode: Filesystem\n  volumeName: ghost-pv\n",
            "yaml_incluster": "06c2325d9b6dda2d878cf3bbe8d9527f1948880908b9a684f3df038fb617696e"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_filename_list.manifests"
          ]
        },
        {
          "index_key": 4,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/ingress-nginx",
            "ignore_fields": null,
            "kind": "Namespace",
            "live_manifest_incluster": "226652e3f3c95105b59b8cc086c85bee839facf2a77ac0fa557ff6ce87021322",
            "live_uid": "3b6df4bb-adb2-4773-924c-65788318a462",
            "name": "ingress-nginx",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "3b6df4bb-adb2-4773-924c-65788318a462",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: ingress-nginx\n  labels:\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n\n---\n# Source: ingress-nginx/templates/controller-serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n  name: ingress-nginx\n  namespace: ingress-nginx\nautomountServiceAccountToken: true\n---\n# Source: ingress-nginx/templates/controller-configmap.yaml\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\ndata:\n  allow-snippet-annotations: 'true'\n---\n# Source: ingress-nginx/templates/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n  name: ingress-nginx\nrules:\n  - apiGroups:\n      - ''\n    resources:\n      - configmaps\n      - endpoints\n      - nodes\n      - pods\n      - secrets\n      - namespaces\n    verbs:\n      - list\n      - watch\n  - apiGroups:\n      - ''\n    resources:\n      - nodes\n    verbs:\n      - get\n  - apiGroups:\n      - ''\n    resources:\n      - services\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingresses\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - ''\n    resources:\n      - events\n    verbs:\n      - create\n      - patch\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingresses/status\n    verbs:\n      - update\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingressclasses\n    verbs:\n      - get\n      - list\n      - watch\n---\n# Source: ingress-nginx/templates/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n  name: ingress-nginx\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: ingress-nginx\nsubjects:\n  - kind: ServiceAccount\n    name: ingress-nginx\n    namespace: ingress-nginx\n---\n# Source: ingress-nginx/templates/controller-role.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n  name: ingress-nginx\n  namespace: ingress-nginx\nrules:\n  - apiGroups:\n      - ''\n    resources:\n      - namespaces\n    verbs:\n      - get\n  - apiGroups:\n      - ''\n    resources:\n      - configmaps\n      - pods\n      - secrets\n      - endpoints\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - ''\n    resources:\n      - services\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingresses\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingresses/status\n    verbs:\n      - update\n  - apiGroups:\n      - networking.k8s.io\n    resources:\n      - ingressclasses\n    verbs:\n      - get\n      - list\n      - watch\n  - apiGroups:\n      - ''\n    resources:\n      - configmaps\n    resourceNames:\n      - ingress-controller-leader\n    verbs:\n      - get\n      - update\n  - apiGroups:\n      - ''\n    resources:\n      - configmaps\n    verbs:\n      - create\n  - apiGroups:\n      - ''\n    resources:\n      - events\n    verbs:\n      - create\n      - patch\n---\n# Source: ingress-nginx/templates/controller-rolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n  name: ingress-nginx\n  namespace: ingress-nginx\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: ingress-nginx\nsubjects:\n  - kind: ServiceAccount\n    name: ingress-nginx\n    namespace: ingress-nginx\n---\n# Source: ingress-nginx/templates/controller-service-webhook.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n  name: ingress-nginx-controller-admission\n  namespace: ingress-nginx\nspec:\n  type: ClusterIP\n  ports:\n    - name: https-webhook\n      port: 443\n      targetPort: webhook\n      appProtocol: https\n  selector:\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/component: controller\n---\n# Source: ingress-nginx/templates/controller-service.yaml\napiVersion: v1\nkind: Service\nmetadata:\n  annotations:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\nspec:\n  type: LoadBalancer\n  externalTrafficPolicy: Local\n  ipFamilyPolicy: SingleStack\n  ipFamilies:\n    - IPv4\n  ports:\n    - name: http\n      port: 80\n      protocol: TCP\n      targetPort: http\n      appProtocol: http\n    - name: https\n      port: 443\n      protocol: TCP\n      targetPort: https\n      appProtocol: https\n  selector:\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/component: controller\n---\n# Source: ingress-nginx/templates/controller-deployment.yaml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n  name: ingress-nginx-controller\n  namespace: ingress-nginx\nspec:\n  selector:\n    matchLabels:\n      app.kubernetes.io/name: ingress-nginx\n      app.kubernetes.io/instance: ingress-nginx\n      app.kubernetes.io/component: controller\n  revisionHistoryLimit: 10\n  minReadySeconds: 0\n  template:\n    metadata:\n      labels:\n        app.kubernetes.io/name: ingress-nginx\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/component: controller\n    spec:\n      dnsPolicy: ClusterFirst\n      containers:\n        - name: controller\n          image: k8s.gcr.io/ingress-nginx/controller:v1.1.1@sha256:0bc88eb15f9e7f84e8e56c14fa5735aaa488b840983f87bd79b1054190e660de\n          imagePullPolicy: IfNotPresent\n          lifecycle:\n            preStop:\n              exec:\n                command:\n                  - /wait-shutdown\n          args:\n            - /nginx-ingress-controller\n            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller\n            - --election-id=ingress-controller-leader\n            - --controller-class=k8s.io/ingress-nginx\n            - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller\n            - --validating-webhook=:8443\n            - --validating-webhook-certificate=/usr/local/certificates/cert\n            - --validating-webhook-key=/usr/local/certificates/key\n          securityContext:\n            capabilities:\n              drop:\n                - ALL\n              add:\n                - NET_BIND_SERVICE\n            runAsUser: 101\n            allowPrivilegeEscalation: true\n          env:\n            - name: POD_NAME\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.name\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n            - name: LD_PRELOAD\n              value: /usr/local/lib/libmimalloc.so\n          livenessProbe:\n            failureThreshold: 5\n            httpGet:\n              path: /healthz\n              port: 10254\n              scheme: HTTP\n            initialDelaySeconds: 10\n            periodSeconds: 10\n            successThreshold: 1\n            timeoutSeconds: 1\n          readinessProbe:\n            failureThreshold: 3\n            httpGet:\n              path: /healthz\n              port: 10254\n              scheme: HTTP\n            initialDelaySeconds: 10\n            periodSeconds: 10\n            successThreshold: 1\n            timeoutSeconds: 1\n          ports:\n            - name: http\n              containerPort: 80\n              protocol: TCP\n            - name: https\n              containerPort: 443\n              protocol: TCP\n            - name: webhook\n              containerPort: 8443\n              protocol: TCP\n          volumeMounts:\n            - name: webhook-cert\n              mountPath: /usr/local/certificates/\n              readOnly: true\n          resources:\n            requests:\n              cpu: 100m\n              memory: 90Mi\n      nodeSelector:\n        kubernetes.io/os: linux\n      serviceAccountName: ingress-nginx\n      terminationGracePeriodSeconds: 300\n      volumes:\n        - name: webhook-cert\n          secret:\n            secretName: ingress-nginx-admission\n---\n# Source: ingress-nginx/templates/controller-ingressclass.yaml\n# We don't support namespaced ingressClass yet\n# So a ClusterRole and a ClusterRoleBinding is required\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: controller\n  name: nginx\n  namespace: ingress-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n---\n# Source: ingress-nginx/templates/admission-webhooks/validating-webhook.yaml\n# before changing this value, check the required kubernetes version\n# https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#prerequisites\napiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nmetadata:\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: admission-webhook\n  name: ingress-nginx-admission\nwebhooks:\n  - name: validate.nginx.ingress.kubernetes.io\n    matchPolicy: Equivalent\n    rules:\n      - apiGroups:\n          - networking.k8s.io\n        apiVersions:\n          - v1\n        operations:\n          - CREATE\n          - UPDATE\n        resources:\n          - ingresses\n    failurePolicy: Fail\n    sideEffects: None\n    admissionReviewVersions:\n      - v1\n    clientConfig:\n      service:\n        namespace: ingress-nginx\n        name: ingress-nginx-controller-admission\n        path: /networking/v1/ingresses\n---\n# Source: ingress-nginx/templates/admission-webhooks/job-patch/serviceaccount.yaml\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n  annotations:\n    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: admission-webhook\n---\n# Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrole.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: ingress-nginx-admission\n  annotations:\n    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: admission-webhook\nrules:\n  - apiGroups:\n      - admissionregistration.k8s.io\n    resources:\n      - validatingwebhookconfigurations\n    verbs:\n      - get\n      - update\n---\n# Source: ingress-nginx/templates/admission-webhooks/job-patch/clusterrolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: ingress-nginx-admission\n  annotations:\n    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: admission-webhook\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: ingress-nginx-admission\nsubjects:\n  - kind: ServiceAccount\n    name: ingress-nginx-admission\n    namespace: ingress-nginx\n---\n# Source: ingress-nginx/templates/admission-webhooks/job-patch/role.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n  annotations:\n    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: admission-webhook\nrules:\n  - apiGroups:\n      - ''\n    resources:\n      - secrets\n    verbs:\n      - get\n      - create\n---\n# Source: ingress-nginx/templates/admission-webhooks/job-patch/rolebinding.yaml\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: ingress-nginx-admission\n  namespace: ingress-nginx\n  annotations:\n    helm.sh/hook: pre-install,pre-upgrade,post-install,post-upgrade\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: admission-webhook\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: ingress-nginx-admission\nsubjects:\n  - kind: ServiceAccount\n    name: ingress-nginx-admission\n    namespace: ingress-nginx\n---\n# Source: ingress-nginx/templates/admission-webhooks/job-patch/job-createSecret.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: ingress-nginx-admission-create\n  namespace: ingress-nginx\n  annotations:\n    helm.sh/hook: pre-install,pre-upgrade\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: admission-webhook\nspec:\n  template:\n    metadata:\n      name: ingress-nginx-admission-create\n      labels:\n        helm.sh/chart: ingress-nginx-4.0.15\n        app.kubernetes.io/name: ingress-nginx\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/version: 1.1.1\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/component: admission-webhook\n    spec:\n      containers:\n        - name: create\n          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660\n          imagePullPolicy: IfNotPresent\n          args:\n            - create\n            - --host=ingress-nginx-controller-admission,ingress-nginx-controller-admission.$(POD_NAMESPACE).svc\n            - --namespace=$(POD_NAMESPACE)\n            - --secret-name=ingress-nginx-admission\n          env:\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n          securityContext:\n            allowPrivilegeEscalation: false\n      restartPolicy: OnFailure\n      serviceAccountName: ingress-nginx-admission\n      nodeSelector:\n        kubernetes.io/os: linux\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 2000\n---\n# Source: ingress-nginx/templates/admission-webhooks/job-patch/job-patchWebhook.yaml\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: ingress-nginx-admission-patch\n  namespace: ingress-nginx\n  annotations:\n    helm.sh/hook: post-install,post-upgrade\n    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded\n  labels:\n    helm.sh/chart: ingress-nginx-4.0.15\n    app.kubernetes.io/name: ingress-nginx\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/version: 1.1.1\n    app.kubernetes.io/managed-by: Helm\n    app.kubernetes.io/component: admission-webhook\nspec:\n  template:\n    metadata:\n      name: ingress-nginx-admission-patch\n      labels:\n        helm.sh/chart: ingress-nginx-4.0.15\n        app.kubernetes.io/name: ingress-nginx\n        app.kubernetes.io/instance: ingress-nginx\n        app.kubernetes.io/version: 1.1.1\n        app.kubernetes.io/managed-by: Helm\n        app.kubernetes.io/component: admission-webhook\n    spec:\n      containers:\n        - name: patch\n          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660\n          imagePullPolicy: IfNotPresent\n          args:\n            - patch\n            - --webhook-name=ingress-nginx-admission\n            - --namespace=$(POD_NAMESPACE)\n            - --patch-mutating=false\n            - --secret-name=ingress-nginx-admission\n            - --patch-failure-policy=Fail\n          env:\n            - name: POD_NAMESPACE\n              valueFrom:\n                fieldRef:\n                  fieldPath: metadata.namespace\n          securityContext:\n            allowPrivilegeEscalation: false\n      restartPolicy: OnFailure\n      serviceAccountName: ingress-nginx-admission\n      nodeSelector:\n        kubernetes.io/os: linux\n      securityContext:\n        runAsNonRoot: true\n        runAsUser: 2000\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: Namespace\nmetadata:\n  labels:\n    app.kubernetes.io/instance: ingress-nginx\n    app.kubernetes.io/name: ingress-nginx\n  name: ingress-nginx\n",
            "yaml_incluster": "226652e3f3c95105b59b8cc086c85bee839facf2a77ac0fa557ff6ce87021322"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_filename_list.manifests"
          ]
        },
        {
          "index_key": 5,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/persistentvolumes/ghost-pv",
            "ignore_fields": null,
            "kind": "PersistentVolume",
            "live_manifest_incluster": "24e2b6f0e9b7afccbc49af229e8b68303725e9638b3f3eed3d340617636351e4",
            "live_uid": "5f387224-0fe8-46b4-8004-6443c2465d43",
            "name": "ghost-pv",
            "namespace": null,
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "5f387224-0fe8-46b4-8004-6443c2465d43",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  annotations:\n    pv.kubernetes.io/migrated-to: pd.csi.storage.gke.io\n    pv.kubernetes.io/provisioned-by: kubernetes.io/gce-pd\n  finalizers:\n  - kubernetes.io/pv-protection\n  - external-attacher/pd-csi-storage-gke-io\n  labels:\n    topology.kubernetes.io/region: us-central1\n    topology.kubernetes.io/zone: us-central1-a\n  name: ghost-pv\nspec:\n  accessModes:\n  - ReadWriteOnce\n  capacity:\n    storage: 50Gi\n  gcePersistentDisk:\n    fsType: ext4\n    pdName: ghost-pv\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: topology.kubernetes.io/zone\n          operator: In\n          values:\n          - us-central1-a\n        - key: topology.kubernetes.io/region\n          operator: In\n          values:\n          - us-central1\n  persistentVolumeReclaimPolicy: Delete\n  storageClassName: gold\n  volumeMode: Filesystem\n",
            "yaml_body_parsed": "apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  annotations:\n    pv.kubernetes.io/migrated-to: pd.csi.storage.gke.io\n    pv.kubernetes.io/provisioned-by: kubernetes.io/gce-pd\n  finalizers:\n  - kubernetes.io/pv-protection\n  - external-attacher/pd-csi-storage-gke-io\n  labels:\n    topology.kubernetes.io/region: us-central1\n    topology.kubernetes.io/zone: us-central1-a\n  name: ghost-pv\nspec:\n  accessModes:\n  - ReadWriteOnce\n  capacity:\n    storage: 50Gi\n  gcePersistentDisk:\n    fsType: ext4\n    pdName: ghost-pv\n  nodeAffinity:\n    required:\n      nodeSelectorTerms:\n      - matchExpressions:\n        - key: topology.kubernetes.io/zone\n          operator: In\n          values:\n          - us-central1-a\n        - key: topology.kubernetes.io/region\n          operator: In\n          values:\n          - us-central1\n  persistentVolumeReclaimPolicy: Delete\n  storageClassName: gold\n  volumeMode: Filesystem\n",
            "yaml_incluster": "24e2b6f0e9b7afccbc49af229e8b68303725e9638b3f3eed3d340617636351e4"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_filename_list.manifests"
          ]
        },
        {
          "index_key": 6,
          "schema_version": 1,
          "attributes": {
            "api_version": "v1",
            "apply_only": false,
            "force_conflicts": false,
            "force_new": false,
            "id": "/api/v1/namespaces/default/secrets/tls-ghost",
            "ignore_fields": null,
            "kind": "Secret",
            "live_manifest_incluster": "46c8cfac312a03c9741e816dae70f188c6c0fdf235b831d4e83e2e964730ecf1",
            "live_uid": "2f9b6ad9-0a71-4aac-9cad-6a6860de3d37",
            "name": "tls-ghost",
            "namespace": "default",
            "override_namespace": null,
            "sensitive_fields": null,
            "server_side_apply": false,
            "timeouts": null,
            "uid": "2f9b6ad9-0a71-4aac-9cad-6a6860de3d37",
            "validate_schema": true,
            "wait": null,
            "wait_for_rollout": true,
            "yaml_body": "apiVersion: v1\ndata:\n  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lVT0h3MjR4bDR5U0I3b2VUUWNueitlTjc5N2pNd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1hURUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpERVdNQlFHQTFVRUF3d05aMmh2YzNRdFlYQndMbTl5Clp6QWVGdzB5TXpFeE1qWXhOalF5TXpGYUZ3MHlNekV5TWpZeE5qUXlNekZhTUYweEN6QUpCZ05WQkFZVEFrRlYKTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXdId1lEVlFRS0RCaEpiblJsY201bGRDQlhhV1JuYVhSegpJRkIwZVNCTWRHUXhGakFVQmdOVkJBTU1EV2RvYjNOMExXRndjQzV2Y21jd2dnRWlNQTBHQ1NxR1NJYjNEUUVCCkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEQk01OEMvejJVUFdFemNMbDhzemJubnNvd2xqY21kTDJQOGhlbVBveHgKcXBUYW9DdWZDYlUvSnZyYmQvSnF0VWw3OXJ0djJMM0M4eG5vTDFxeGVIdlNlNmkrREJXemI3emZDSFRhZVdQaAoveDcxUDFoMDRaUHlnTEtRcUxVYmo3VzVKZ3BWK1JNaUN4a3praHNiYUZOYWlpelE2RFhVUWxVWllQaExCVHkwCi8xYk90T1RGQm1YcmNQYW43VWd1OUdKMW9NQ25pb1ZFUjFjQko1RnFYQ1FRdWF5bzdXaEZwMHJaVFQzdVdHbnIKa08xM0FCVlNGUGhSWVJQTHZhN25kc3UvdlNtMldob2YzRTRZY3EvZjJZTkpSbXBxV0dzSjFtRmRYWDExc1l4NApWL0h4M0U2Y01aQ09OVXVqSFNxVkdHdU5QTzFIdmhwa1ArWUg2djU5U05vSEFnTUJBQUdqVXpCUk1CMEdBMVVkCkRnUVdCQlNuNHpOeFFzRGxaZUx5MTlEditWbnZ1WTB4T2pBZkJnTlZIU01FR0RBV2dCU240ek54UXNEbFplTHkKMTlEditWbnZ1WTB4T2pBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBSApMeHJZZ0tvdXRDQVArM2lyc05pSU40amFwOVhnTVdNdGRLVVpqSFFxWjN4bmQ4bXF5K1NmZWxiTXJTZnJRbWJlCkd0ampFSVRVdmVlNzAyWjI5QmNPaDlCOVZkekRNUzJveCt1R2ZxdU5CMUF6RmFBSkNjMGJHZlViakdBdThaWkEKVlNpV2kwQU9qMmhldmJjT1dKS09NaFJZMUVoMGNRZE5qSlNpVEZKNnZPTGczb1hmWmF0V1o1RUpuMmJtS1duYwpPRUR5cktiVkFDTnJkMzl2a2o0dWowb1JKcVV6aDdobDJ1b0NKQW9nR2Z0U2dXNGt5a0ZubmZmL2VkWWRoV3FUCmE0ZGJsU0ZCNUxRMU1PQnBraWtMQ3dqYWxiNWZob3VXMVFBMWR4V3FzaE1vN2d3M0hZMjVDSHBPcnA4ODFRbFgKc3V6blVpN3dkU0ZRRWZGR2MzbUMKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=\n  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRREJNNThDL3oyVVBXRXoKY0xsOHN6Ym5uc293bGpjbWRMMlA4aGVtUG94eHFwVGFvQ3VmQ2JVL0p2cmJkL0pxdFVsNzlydHYyTDNDOHhubwpMMXF4ZUh2U2U2aStEQld6Yjd6ZkNIVGFlV1BoL3g3MVAxaDA0WlB5Z0xLUXFMVWJqN1c1SmdwVitSTWlDeGt6Cmtoc2JhRk5haWl6UTZEWFVRbFVaWVBoTEJUeTAvMWJPdE9URkJtWHJjUGFuN1VndTlHSjFvTUNuaW9WRVIxY0IKSjVGcVhDUVF1YXlvN1doRnAwclpUVDN1V0ducmtPMTNBQlZTRlBoUllSUEx2YTduZHN1L3ZTbTJXaG9mM0U0WQpjcS9mMllOSlJtcHFXR3NKMW1GZFhYMTFzWXg0Vi9IeDNFNmNNWkNPTlV1akhTcVZHR3VOUE8xSHZocGtQK1lICjZ2NTlTTm9IQWdNQkFBRUNnZ0VBVDNjNEZEZC8wSlZlZ1pYLzlUYVJncnRoVnBLeXBIS245YWtSNlNNWkNUZXMKZWpBZlFRN3hLY1NTc2Vxb0h4UHA0YjhlWVdhNHhwTFBPUjBoSkpYMStDRTh5czZWcm5Sckx5Ri9UczFYTkFHSApia0JiMWRkaXp2LzRjbCt4L21BaDBzRyt4cFhvTkx4ejVTNVhUL0tkTmtSWElxWWdYZW5hcnRHZnp0dWNtS1VsCmpEbFVZS05kL3ZpVkU1bWEwa1lPWnNWSUxtOXpPR2VkL1BvYjZ3YzlkRUwyOWNEMHM3NmEyeEFUdGtWMk9WMHUKcVJ6M0Y2Njhsa3B4d3ZFaDlzR0VCTlhsOHkvbkhQbHNJRHhURmNjWUlkVHdRMEUyc0xEOVVNZFpmSFlTcTJSVgpTUk1SWkp6aVJmb3ZkSXptWm5xYzROakUxaVBJQkVaenovY0pZVzQ0WVFLQmdRRDZKUlU4UVZDTEZOQmlsdG81Clg1azR3SS9ZVzMwTUU2Q3dsQWlKRDU0SGIzdVZ6eFJFMGZEUGJRUU00RUtBdzF4dTlOeVozTmUrc05Bb1liNlUKNG9EQWJvWjVYSnlvWldveFhkWCswK3l3Sit0aGNSSWovUERCelQ2d1BBYWxYL2gzUTNUWjd0cmVHY2txRG9LZQpRVW54Y2d2cU1rMXJyZkk0SU1senRRcnBkUUtCZ1FERnVWTEQ0cEdEY2JVRDhHcmMyMjJLNlFsUjNqSUFnUXRWClIxS0pIMVp3UHUwUmtGZXd6RTZaUS8ydTlsNjZqcUE2T1BDSjR4N2V5ZDQ1YllvMFdKUElCTG5WbXpha1Bta1AKaUF2R1F3WlZuQldKRVIzcWZuSVZUdmNCdzZUQnh2bDV0OXdYek1WZHdMS1Z3bUFydXU4VG5zUUNTOTd3ejNkRwpjR1JabFdGS0N3S0JnUUREbHpOZmhnS2dmWW5qVE9rZGEyNjNQWG84Um0wa2dFUnBUWmJPOVBNd0JTK3hGOVpWCmFZTE43Z1A0dlhIQ2xQODFreWphOWgrTDcxMFQ5am02Mk5DcnBzQm5MTThoclFxM3h4T0l5ZFNNZU9wSHFzM3cKYmRzaTdvVlI3OTJTZWRRaURSRFZSenJENTQydjRPQ3BOWXZIeXRFZU1tN3UvM2dpQXlFQjVGRy84UUtCZ0dzegowTkVPTGRFenZHNVhVc2xPVzNVK1ptUXg4YkJlUnhQRXFOWlozRmJkZDFIWGpnUDRzZ0RkWVZVVWxVWFhBTDZ3CmtwSmdSeU9LRmVmVElXVENSZFhqNGhJVHBxdWtmdmdCemtoL25KYWNHdjBHLzg1ZEltTzFQYTJDTXZreGRaL3QKOVBJZWYwQVdzMzBKTjNWZVZET3lHQm9hb3RTejE3cWtRM1JpenE0REFvR0FTc1hDTm56RWpoWnJQanJjNTA0dQp0UVBRZlY3R0pvOFJXU1lVQ3BUcVJSdlEwYVlKQkE4SlZJc2hkbEJlTXFUVWJmV3o5MElzd1lSazRYakxUSm5nCnh5U0VYZ3FWY2JsSkpoQ0FPYzNiYWo4cnpVaFhLVUZLeHdzU3ZWN0tUcTNSaTlLNC9EVFNaWjIrTUUzaEErZlEKd1gweENMZmVhQlFJVFdqaTVPZ1dkV1E9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K\nkind: Secret\nmetadata:\n  name: tls-ghost\n  namespace: default\ntype: kubernetes.io/tls\n",
            "yaml_body_parsed": "apiVersion: v1\ndata: (sensitive value)\nkind: Secret\nmetadata:\n  name: tls-ghost\n  namespace: default\ntype: kubernetes.io/tls\n",
            "yaml_incluster": "46c8cfac312a03c9741e816dae70f188c6c0fdf235b831d4e83e2e964730ecf1"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.kubectl_filename_list.manifests"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
